# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "refactor_simproc" ]
  pull_request:
    branches: [ "refactor_simproc" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "pypy3.9"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:pypy/ppa
        sudo apt update; apt-get --fix-missing -y install \ 
                python3.8-dev \
                python3.8-venv \
                xterm \
                virt-manager \
                git \
                curl \
                pypy3 \
                libvirt-dev \
                python3.9 \
                python3.9-venv \
                pypy3-dev \
                pypy3-venv \
                python-pycparser \
                gfortran \
                cmake \
                libopenblas-dev \
                libjansson-dev \
                libssl-dev \
                libffi-dev \
                cargo \
                build-essential \
                libjpeg-dev \
                zlib1g-dev \
                swig \
                qemu-kvm \
                libvirt-daemon-system \
                libvirt-clients \
                bridge-utils \
                python3-libvirt \
                tcpdump \
                apparmor-utils \
                libcap2-bin \
                libcairo2-dev \
                libjpeg-turbo8-dev \
                libpng-dev \
                libossp-uuid-dev \
                freerdp2-dev \
                python3-wheel \
                gdb-multiarch \
                tcpdump \
                wget \
                libwebp-dev \
                libwebsockets-dev \
                libogg-dev \
                libvorbis-dev \
                libpulse-dev \
                libgraphviz-dev \
                pkg-config \
                radare2
        mkdir /tmp/guac-build
        cd /tmp/guac-build; \
          wget https://www.apache.org/dist/guacamole/1.5.3/source/guacamole-server-1.5.3.tar.gz; \
          tar xvf guacamole-server-1.5.3.tar.gz && cd guacamole-server-1.5.3; \
          ./configure --with-init-dir=/etc/init.d; \
          make && make install 
        ldconfig
        /etc/init.d/guacd start
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
